{"version":3,"sources":["img/banner.jpg","functions/useCustomFunctions.js","screens/App.js","functions/useWindowWidth.js","index.js"],"names":["noExponents","number","data","String","split","length","z","sign","str","replace","mag","Number","calculateOdds","probability","top","bottom","x","Math","round","toString","betweenTwoNumber","value","lower","upper","App","userNumber","useState","window","innerWidth","windowWidth","setWindowWidth","innerHeight","windowHeight","setWindowHeight","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","useWindowWidth","spinPercentage","setSpinPercentage","ACTUALSpinPercentage","setACTUALSpinPercentage","calculateProbability","prob","i","details","name","stat","imageSize","ContainerPaddingTop","HeaderFontSize","HeaderStatFontSize","className","style","resizeMode","backgroundImage","banner","backgroundRepeat","backgroundPosition","backgroundSize","height","width","position","Container","paddingTop","paddingRight","paddingLeft","marginBottom","paddingBottom","fluid","Segment","padded","inverted","Header","fontSize","dividing","Input","action","Button","onClick","parseInt","adjusted","positive","icon","labelPosition","Icon","size","placeholder","type","min","max","onChange","event","Divider","section","lineHeight","overflow","fontWeight","content","hidden","Group","horizontal","map","detail","textAlign","DisplayContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c4809c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.a5723d17.jpg\";","export const noExponents = function (number) {\r\n  var data = String(number).split(/[eE]/);\r\n  if (data.length == 1) return data[0];\r\n  var z = \"\",\r\n    sign = number < 0 ? \"-\" : \"\",\r\n    str = data[0].replace(\".\", \"\"),\r\n    mag = Number(data[1]) + 1;\r\n\r\n  if (mag < 0) {\r\n    z = sign + \"0.\";\r\n    while (mag++) z += \"0\";\r\n    return z + str.replace(/^\\-/, \"\");\r\n  }\r\n  mag -= str.length;\r\n  while (mag--) z += \"0\";\r\n  return str + z;\r\n};\r\n\r\nexport const numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport const calculateOdds = (number, probability) => {\r\n  return {\r\n    top: 1,\r\n    bottom: numberWithCommas(Math.round(100 / probability)),\r\n  };\r\n};\r\n\r\nconst betweenTwoNumber = (value, lower, upper) => {\r\n  return value > lower && value < upper;\r\n};\r\n\r\nexport const handleScoreDisplay = (userNumber) => {\r\n  if (betweenTwoNumber(userNumber, 2, 13)) {\r\n    return \"Not Even Hard Silly 🍆\";\r\n  } else if (betweenTwoNumber(userNumber, 13, 23)) {\r\n    return \"Kinda Unlucky 😈\";\r\n  } else if (betweenTwoNumber(userNumber, 23, 33)) {\r\n    return \"Bad Luck Kiddo 💩\";\r\n  } else if (betweenTwoNumber(userNumber, 33, 43)) {\r\n    return \"Pretty Unlucky 🎀\";\r\n  } else if (betweenTwoNumber(userNumber, 43, 53)) {\r\n    return \"Super Unlucky 💰\";\r\n  } else if (betweenTwoNumber(userNumber, 53, 63)) {\r\n    return \"Ultra Unlucky ⭐\";\r\n  } else if (betweenTwoNumber(userNumber, 63, 73)) {\r\n    return \"Monster Unlucky 🌟\";\r\n  } else if (betweenTwoNumber(userNumber, 73, 83)) {\r\n    return \"God-Like Unlucky ✨\";\r\n  } else if (betweenTwoNumber(userNumber, 83, 100)) {\r\n    return \"Stop lying to me and yourself 🌠\";\r\n  }\r\n};\r\n","// React imports\nimport { useState } from \"react\";\n\n// Semantic react import\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Input,\n  Segment,\n} from \"semantic-ui-react\";\n\n// Css imports\nimport \"../css/App.css\";\n\n// Image imports\nimport banner from \"../img/banner.jpg\";\n\n// Dep import\nimport DynamicFont from \"react-dynamic-font\";\n\n// Custom function imports\nimport useWindowWidth from \"../functions/useWindowWidth\";\nimport {\n  noExponents,\n  calculateOdds,\n  handleScoreDisplay,\n} from \"../functions/useCustomFunctions\";\n\n// Global variables\nconst SPIN_PERCENTAGE_MAX = 99;\nconst SPIN_PERCENTAGE_MIN = 3;\nconst FONT_SIZE_MIN = 18;\nconst FONT_SIZE_MAX = 50;\n\nfunction App() {\n  const { windowWidth, windowHeight } = useWindowWidth();\n\n  const [spinPercentage, setSpinPercentage] = useState(SPIN_PERCENTAGE_MIN);\n  const [ACTUALSpinPercentage, setACTUALSpinPercentage] = useState(\n    SPIN_PERCENTAGE_MIN\n  );\n\n  const handleChanceChange = (event, data) => {\n    setSpinPercentage(data.value);\n  };\n\n  const handleChanceUpdate = () => {\n    let value = parseInt(spinPercentage);\n    let adjusted = false;\n\n    if (value % 3 !== 0) {\n      // Value is not divisible by 3\n\n      if ((value + 1) % 3 === 0) {\n        // Adding 1 to the value means its divisible, update it\n        value = value + 1;\n        adjusted = true;\n      }\n\n      if ((value - 1) % 3 === 0 && !adjusted) {\n        // If the value has not been adjusted and subtracting 1 makes it divisible then adjust it\n        value = value - 1;\n        adjusted = true;\n      }\n    }\n\n    if (value > SPIN_PERCENTAGE_MAX) {\n      value = SPIN_PERCENTAGE_MAX;\n    }\n\n    if (value < SPIN_PERCENTAGE_MIN) {\n      value = SPIN_PERCENTAGE_MIN;\n    }\n\n    setSpinPercentage(value);\n    setACTUALSpinPercentage(value);\n  };\n\n  const calculateProbability = () => {\n    let prob = 1;\n    for (let i = 1; i < ACTUALSpinPercentage / 3 + 1; i++) {\n      prob = prob * ((100 - i * 3) / 100);\n    }\n    return prob;\n  };\n\n  const details = [\n    {\n      name: \"Odds 🎲\",\n      stat: (\n        <>\n          ~<sup>1</sup>\n          &frasl;\n          <sub>\n            {calculateOdds(ACTUALSpinPercentage, calculateProbability()).bottom}\n          </sub>\n        </>\n      ),\n    },\n    {\n      name: \"Rounds 🧾\",\n      stat: <>~{ACTUALSpinPercentage / 3} Games Played</>,\n    },\n    {\n      name: \"Score 💯\",\n      stat: <>\"{handleScoreDisplay(ACTUALSpinPercentage)}\"</>,\n    },\n  ];\n\n  const imageSize = windowHeight / 2;\n  const ContainerPaddingTop = imageSize - imageSize / 4;\n\n  const HeaderFontSize =\n    windowWidth > 400\n      ? windowWidth < 992\n        ? windowWidth / 22\n        : FONT_SIZE_MAX\n      : FONT_SIZE_MIN;\n  const HeaderStatFontSize = HeaderFontSize / 2;\n\n  return (\n    <>\n      <div\n        className=\"banner\"\n        style={{\n          resizeMode: \"cover\",\n          backgroundImage: `url(${banner})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"bottom\",\n          backgroundSize: \"cover\",\n          height: imageSize,\n          width: \"100%\",\n          position: \"absolute\",\n        }}\n      />\n\n      <Container\n        style={{\n          paddingTop: ContainerPaddingTop,\n          paddingRight: windowWidth > 1200 ? \"6%\" : \"2%\",\n          paddingLeft: windowWidth > 1200 ? \"6%\" : \"2%\",\n          marginBottom: 0,\n          paddingBottom: 0,\n        }}\n        fluid\n      >\n        <Segment\n          padded\n          inverted\n          style={{ backgroundImage: \"linear-gradient(#1b1c1d, #212121)\" }}\n        >\n          <Header style={{ fontSize: HeaderFontSize }} dividing inverted>\n            Rainbow Six Seige Coin-flip Statistics 🧮\n          </Header>\n          <div>\n            <Input\n              action={\n                <Button\n                  onClick={handleChanceUpdate}\n                  positive\n                  icon\n                  labelPosition=\"right\"\n                >\n                  <Icon name=\"sync\" />\n                  Update\n                </Button>\n              }\n              size=\"big\"\n              placeholder=\"Current Spin Chance Percentage\"\n              fluid\n              type=\"number\"\n              min={SPIN_PERCENTAGE_MIN}\n              max={SPIN_PERCENTAGE_MAX}\n              value={spinPercentage}\n              onChange={handleChanceChange}\n            />\n          </div>\n          <Divider section />\n          <Segment>\n            <Header style={{ fontSize: HeaderStatFontSize }}>\n              Chance Of Getting This Far:\n            </Header>\n            <div\n              style={{\n                width: \"100%\",\n                fontSize: HeaderFontSize,\n                lineHeight: 1,\n                overflow: \"hidden\",\n                fontWeight: \"bold\",\n              }}\n            >\n              <DynamicFont\n                content={\n                  \"~ \" + noExponents(calculateProbability() * 100) + \" %\"\n                }\n              />\n            </div>\n          </Segment>\n          <Divider hidden />\n          <Segment.Group horizontal>\n            {details.map((detail) => {\n              return (\n                <Segment>\n                  <Header\n                    textAlign=\"center\"\n                    style={{ fontSize: HeaderFontSize }}\n                  >\n                    {detail.name}\n                  </Header>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      fontSize: HeaderStatFontSize,\n                      lineHeight: 2,\n                      overflow: \"hidden\",\n                      fontWeight: \"bolder\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <DynamicFont content={detail.stat} />\n                  </div>\n                </Segment>\n              );\n            })}\n          </Segment.Group>\n        </Segment>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default () => {\r\n  // This hook returns the window dimensions\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  const handleWindowSizeChange = () => {\r\n    setWindowHeight(window.innerHeight);\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  return { windowWidth, windowHeight };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./css/index.css\";\n\nimport App from \"./screens/App\";\n\nconst DisplayContainer = () => {\n  return (\n    <Router>\n      <App />\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DisplayContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}